server:
  port: 8080

# --- Configurazione di base per Spring Boot ---
spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: identificazione-service-route
          uri: lb://IDENTIFICAZIONE-SERVICE
          predicates:
            - Path=/api/v1/identificazione/**
          filters:
            - name: Authentication

        - id: cartella-service-route
          uri: lb://CARTELLA-SERVICE
          predicates:
            - Path=/api/v1/cartella/**
          filters:
            # 1. Applica il nostro filtro di sicurezza personalizzato
            - name: Authentication
            # 2. Applica il Circuit Breaker
            - name: CircuitBreaker
              args:
                name: cartellaServiceCircuitBreaker # Un nome univoco per questo interruttore
                fallbackUri: forward:/fallback/cartellaService # Chiama il nostro controller di fallback

# --- Configurazione di base per Eureka ---
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# --- Propriet√† per la sicurezza JWT ---
jwt:
  secret: ${JWT_SECRET_KEY:default-secret-for-dev}
  expiration-ms: 3600000

# --- (Opzionale ma raccomandato) Configurazione fine del Circuit Breaker ---
resilience4j:
  circuitbreaker:
    configs:
      default: # Impostazioni di default per tutti i circuit breaker
        sliding-window-size: 10 # Valuta le ultime 10 chiamate
        failure-rate-threshold: 50 # Se il 50% fallisce, apre il circuito
        wait-duration-in-open-state: 10s # Rimane aperto per 10 secondi prima di riprovare
        permitted-number-of-calls-in-half-open-state: 3 # Permette 3 chiamate di prova
    instances:
      cartellaServiceCircuitBreaker: # Impostazioni specifiche per il nostro circuito
        base-config: default # Eredita le impostazioni di default